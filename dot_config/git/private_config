[core]
    excludesfile = ~/.config/git/ignore

[include]
    path = ~/.config/git/user-perso.conf

[includeIf "gitdir:~/Projets/MGDIS/"]
    path = ~/.config/git/user-mgdis.conf

[gpg]
    format = ssh

[gpg "ssh"]
    program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"

[commit]
    gpgsign = true

[init]
    defaultBranch = main

[column]
    ui = auto

[branch]
    sort = -committerdate

[tag]
    sort = version:refname

[pull]
    rebase = true

[push]
    default = simple
    autoSetupRemote = true
    followTags = true

[fetch]
    prune = true
    pruneTags = true
    all = true

[diff]
    algorithm = histogram
    colorMoved = plain
    mnemonicPrefix = true
    renames = true

[help]
    autocorrect = prompt

[commit]
    verbose = true

[rerere]
    enabled = true
    autoupdate = true

[rebase]
    autoSquash = true
    autoStash = true
    updateRefs = true

[alias]
    # The basic aliases
    s = status
    cm = commit -m
    cp = cherry-pick

    # Branch related aliases
    br = branch
    co = checkout
    com = checkout main
    cod = checkout develop

    # Syncing related aliases
    pur = pull --rebase
    prune = fetch --prune

    # Push related aliases
    pom = push origin main
    pod = push origin develop
    force = push --force-with-lease

    # Mistake related aliases
    nope = checkout -- .
    undo = reset --soft HEAD^
    amend = commit --amend --no-edit

    # Diff related aliases
    changes = diff --name-status
    dic = diff --cached
    diffstat = diff --stat

    # Log related aliases
    lg = log --pretty=oneline --abbrev-commit --graph --decorate
    overview = log --all --oneline --no-merges
    changelog = "!sh -c \"git log --oneline --no-merges $1..HEAD\" -"

    # Git flow
    new = !git pull origin develop && git flow feature start
    done = !git pull origin develop && git flow feature finish "$(git symbolic-ref --short HEAD | sed -n 's/^feature\\///p')"
    go = !git checkout $1 && pull
    master = !git checkout master && pull
    develop = !git checkout develop && pull
    mmm = !git fetch origin master && git rebase origin/master
    ddd = !git fetch origin develop && git rebase origin/develop

    # Clean
    rpo = remote prune origin
    cleanlocal = !git branch --merged | egrep -v \"(^\\*|master|main|dev)\" | xargs git branch -d

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
